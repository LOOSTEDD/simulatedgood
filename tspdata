We are going to solve TSP(travelling salesman problem) using Simulated annealing and matplotlib library for better visualization of the algorithm
Do you want to add your own file for inputs or let me create some random inputs
press 1 for random otherwise enter your full file location
1
enter the amount of inputs (points/cities)
200
103047.584158
80116.5908796
65355.3440161
61247.0766903
56889.5532745
55284.5860832
52272.6611836
49081.4767079
47616.8153864
44494.4003912
42888.0488927
40695.3065974
39383.6974761
38972.2449182
37986.7728566
37402.4707491
37217.3587858
36754.5844977
36584.0127595
36149.9606524
35587.3713516
35093.1993377
34539.2293185
33970.4303183
33637.8043545
33142.587941
32550.5611543
31368.7430007
30602.7457561
30406.6952061
30357.7343967
29799.5873057
29545.7802334
28677.969469
28674.6073985
28588.4938479
27633.7940127
27411.9154122
27102.8257504
26710.5283225
26166.8392025
25812.1585045
25698.7542243
25569.9622593
25041.8695008
24986.3544804
24812.2048375
24717.993329
24648.2862587
24105.8979392
24021.0905731
24003.1438581
23805.6058394
23568.3095971
23443.3899893
23296.4478808
23265.9892573
22875.5396769
22660.6743467
22465.7689044
21902.6044682
21706.096943
21532.0136088
21447.806527
21235.9403817
21175.2441527
21066.9453264
20778.6231703
20735.4722104
20556.5399152
20385.0726064
20056.3425066
19888.038536
19635.6857135
19451.5878719
19412.5361501
19149.4216957
18958.6380025
18934.5194213
18894.07018
18549.6575701
18353.1200096
18195.789374
18168.9792565
17977.4662678
17931.4820784
17895.9932685
17840.1697914
17828.7631152
17791.0366672
17725.543791
17576.9817387
17450.0501102
17256.9759116
17168.2333072
17141.8788944
17098.1906792
17039.2592165
16930.3693431
16825.1040138
16801.0756465
16600.7986871
16573.1111337
16458.5227466
16388.8992899
16217.9276002
16082.2764578
15976.2272549
15933.7249842
15902.1269433
15829.9927468
15788.9224156
15707.3740011
15580.2523583
15570.8980325
15564.2925216
15562.9368495
15441.9052505
15401.2243618
15322.9186953
15224.3547244
15151.5568398
14932.5215105
14625.1303749
14574.7045873
14522.7133315
14426.5347239
14421.4338789
14418.2685641
14338.9861001
14338.2791901
14319.9821412
14249.6374297
14233.974804
14194.1251794
14073.7991619
14048.5928508
14018.2469628
13942.6440097
13934.3838285
13910.0037077
13858.7454659
13687.8857046
13668.0257989
13637.2231204
13572.6164852
13437.1050241
13351.0347242
13304.5714675
13260.6177027
13259.9242035
13249.9288615
13228.0817104
13209.4475947
13203.4027175
13182.4470477
13182.1265529
13151.2741313
13133.0318127
13068.8325017
13030.5541713
12989.7791842
12968.9724113
12928.5577185
12890.9735697
12834.9266563
12773.6685258
12770.349103
12762.6926785
12761.2703514
12756.1974989
12750.1193462
12710.8448714
12590.8084801
12566.282593
12562.0381394
12505.6489991
12503.3862787
12501.9818754
12476.1505817
12447.0779062
12433.4794502
12391.7487629
12371.4558544
12346.8571115
12327.5157306
12317.4472153
12307.8119309
12246.9501118
12208.2442091
12178.8657682
12158.9927373
12129.1646847
12108.6601879
12105.2995037
12096.3664463
12063.817086
11999.0036764
11985.4368763
11980.6714224
11973.1044829
11971.3621742
11961.6943622
minimum length using simulated annealing- 
11961.6943622

final order of coordinates to visit for near optimal solution--

[array([246, 360]), array([212, 295]), array([208, 294]), array([278, 355]), array([326, 342]), array([308, 242]), array([287, 202]), array([328,  80]), array([375, 129]), array([388,  93]), array([439, 146]), array([466,   4]), array([470,  57]), array([609,  15]), array([658,  42]), array([668,  18]), array([676,   8]), array([684,   8]), array([692,   1]), array([709,  17]), array([801,  27]), array([764,  49]), array([735,  76]), array([779, 113]), array([789, 103]), array([952,  35]), array([970, 143]), array([971, 157]), array([914, 164]), array([954, 243]), array([935, 257]), array([987, 418]), array([882, 415]), array([898, 504]), array([948, 563]), array([920, 593]), array([919, 584]), array([873, 576]), array([937, 592]), array([964, 589]), array([971, 620]), array([955, 636]), array([892, 639]), array([893, 628]), array([909, 777]), array([911, 891]), array([936, 904]), array([928, 925]), array([930, 945]), array([964, 920]), array([943, 913]), array([867, 869]), array([858, 831]), array([888, 791]), array([873, 751]), array([838, 751]), array([782, 756]), array([820, 789]), array([799, 744]), array([769, 729]), array([791, 718]), array([772, 659]), array([753, 662]), array([741, 657]), array([702, 645]), array([678, 634]), array([758, 615]), array([733, 598]), array([795, 596]), array([819, 599]), array([835, 517]), array([802, 484]), array([811, 435]), array([839, 381]), array([824, 357]), array([781, 344]), array([866, 273]), array([832, 175]), array([747, 213]), array([764, 176]), array([664, 154]), array([665, 163]), array([674, 165]), array([665, 168]), array([672, 200]), array([620, 164]), array([619, 129]), array([599, 152]), array([621, 221]), array([613, 240]), array([602, 211]), array([563, 217]), array([550, 188]), array([514, 219]), array([506, 237]), array([501, 294]), array([457, 339]), array([488, 354]), array([590, 445]), array([619, 392]), array([586, 359]), array([680, 327]), array([691, 325]), array([707, 309]), array([716, 366]), array([733, 404]), array([712, 440]), array([709, 445]), array([690, 412]), array([680, 421]), array([647, 455]), array([678, 478]), array([714, 480]), array([673, 555]), array([650, 530]), array([594, 561]), array([583, 542]), array([481, 521]), array([564, 623]), array([565, 659]), array([585, 709]), array([622, 763]), array([502, 785]), array([472, 851]), array([573, 884]), array([571, 917]), array([612, 930]), array([623, 902]), array([701, 796]), array([749, 814]), array([738, 839]), array([767, 886]), array([762, 967]), array([750, 986]), array([634, 964]), array([618, 948]), array([618, 995]), array([480, 992]), array([397, 879]), array([432, 910]), array([388, 879]), array([328, 877]), array([293, 826]), array([267, 812]), array([291, 866]), array([261, 956]), array([273, 934]), array([257, 876]), array([137, 842]), array([191, 942]), array([ 90, 970]), array([ 83, 854]), array([ 60, 800]), array([117, 730]), array([ 90, 711]), array([ 98, 683]), array([ 94, 680]), array([ 55, 653]), array([ 17, 617]), array([101, 618]), array([155, 632]), array([133, 710]), array([145, 683]), array([218, 742]), array([351, 677]), array([385, 702]), array([387, 637]), array([428, 578]), array([345, 625]), array([312, 571]), array([259, 538]), array([258, 532]), array([347, 499]), array([309, 474]), array([396, 529]), array([388, 488]), array([385, 393]), array([368, 358]), array([236, 457]), array([148, 469]), array([120, 451]), array([150, 467]), array([ 94, 453]), array([ 50, 427]), array([ 14, 411]), array([ 27, 330]), array([ 96, 298]), array([ 83, 195]), array([ 65, 138]), array([117,  78]), array([182,  35]), array([108,  26]), array([89, 19]), array([ 11, 103]), array([ 28, 202]), array([148, 262]), array([150, 300]), array([190, 272]), array([190, 346]), array([223, 353])]


------------------
(program exited with code: 0)
Press return to continue
  

